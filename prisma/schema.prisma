generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions")]
}

model Household {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  guests    Guest[]

  @@index([name])
}

model MealOption {
  id            String   @id @default(cuid())
  name          String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  isChildOption Boolean  @default(false)
  guests        Guest[]  @relation("GuestMeal")
}

model DessertOption {
  id            String   @id @default(cuid())
  name          String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  isChildOption Boolean  @default(false)
  guests        Guest[]  @relation("GuestDessert")
}

model Guest {
  id              String             @id @default(cuid())
  name            String
  email           String?
  isAttending     Boolean?
  mealOptionId    String?
  dessertOptionId String?
  dietaryNotes    String?
  householdId     String
  isChild         Boolean            @default(false)
  isTeenager      Boolean            @default(false)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  dessertChoice   DessertOption?     @relation("GuestDessert", fields: [dessertOptionId], references: [id])
  household       Household          @relation(fields: [householdId], references: [id])
  mealChoice      MealOption?        @relation("GuestMeal", fields: [mealOptionId], references: [id])
  activities      GuestActivity[]
  responses       QuestionResponse[]

  @@index([name])
}

model GuestActivity {
  id        String   @id @default(cuid())
  guestId   String
  action    String
  details   String?
  createdAt DateTime @default(now())
  guest     Guest    @relation(fields: [guestId], references: [id])

  @@index([guestId])
  @@index([createdAt])
}

model Question {
  id         String             @id @default(cuid())
  question   String
  type       String
  options    String             @default("")
  isRequired Boolean            @default(false)
  isActive   Boolean            @default(true)
  perGuest   Boolean            @default(false)
  order      Int                @default(0)
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  responses  QuestionResponse[]

  @@index([order])
}

model QuestionResponse {
  id         String   @id @default(cuid())
  questionId String
  guestId    String
  answer     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  guest      Guest    @relation(fields: [guestId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
}

model Settings {
  id              Int       @id @unique @default(1)
  weddingDate     DateTime?
  ceremonyTime    String?
  receptionTime   String?
  venueName       String?
  venueAddress    String?
  primaryColor    String    @default("#d4af37")
  accentColor     String    @default("#000000")
  backgroundImage String?
  showGallery     Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model BridalPartyMember {
  id          String   @id @default(cuid())
  name        String
  role        String
  description String
  imageUrl    String
  type        String
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([type, order])
}

model StatisticsCache {
  id                String   @id @default(cuid())
  totalGuests      Int      @default(0)
  respondedGuests  Int      @default(0)
  attendingGuests  Int      @default(0)
  notAttendingGuests Int    @default(0)
  mealStats        Json     @default("{}")
  dessertStats     Json     @default("{}")
  lastUpdated      DateTime @default(now())
  version          Int      @default(1)

  @@index([lastUpdated])
}
